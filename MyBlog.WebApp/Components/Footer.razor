@rendermode @(new InteractiveServerRenderMode(prerender: false))
@using MyBlog.WebApp.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationService AuthService

<h6>Find Me On My Socials</h6>

<div class="socials-container">
    <div class="socials">
        <a href="https://www.instagram.com/mickael_desclaux/"><img class="socials-icons" src="Icons/instagram.png" alt="My Instagram Account" /></a>
        <a href="https://www.threads.net/%40mickael_desclaux/"><img class="socials-icons" src="Icons/threads.png" alt="My Threads Account" /></a>
        <a href="https://github.com/Mickael-Desclaux"><img class="socials-icons" src="Icons/github-1.png" alt="My Github Account" /></a>
    </div>
</div>

<div class="top_btn-container">
    <div class="top_btn">
        <a id="top_btn" href="#top">Back To Top</a>
    </div>
</div>

@if (IsUserAuthenticated)
{
    <div class="logout_btn">
        <button @onclick="Logout">Logout</button>
    </div>
}

@code {
    protected bool IsUserAuthenticated { get; private set; }

    private async Task Logout()
    {
        await AuthService.Logout();
    }

    protected override async Task OnInitializedAsync()
    {
        var isAuthenticated = await AuthService.IsUserAuthenticated();
        IsUserAuthenticated = isAuthenticated;

    }
}